{"changed":true,"filter":false,"title":"Untitled1","tooltip":"/Untitled1","value":"AWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Creates an HL7 parsing stack'\n\nParameters:\n    TempBucket: \n        Description: Where we are temporarily storing artifacts while deploying\n        Type: String\n    TempLibKey: \n        Description: Library key in temporary bucket\n        Type: String\n    TempFuncKey: \n        Description: Function key in temporary bucket\n        Type: String\n    IngestBucket:\n        Description: Bucket we want to ingest HL7v2 messages into\n        Type: String\n\nResources:\n    hl7apyLayer:\n        Type: AWS::Lambda::LayerVersion\n        Properties: \n            CompatibleRuntimes: [\"python2.7\", \"python3.6\", \"python3.7\", \"python3.8\"]\n            Content: \n                S3Bucket: !Ref TempBucket\n                S3Key: !Ref TempLibKey\n            LayerName: \"hl7apy\"\n            Description: \"HL7apy parser library\"\n            LicenseInfo: \"MIT\"\n    \n    # Role assumed by our Lambda parsing function, provides permission to access the data lake bucket\n    LambdaTriggerRole:\n        Type: AWS::IAM::Role\n        Properties: \n            AssumeRolePolicyDocument: \n                Version: 2012-10-17\n                Statement:\n                  - Effect: Allow\n                    Principal:\n                        Service:\n                          - 'lambda.amazonaws.com'\n                    Action:\n                      - 'sts:AssumeRole'\n            Path: /\n            Policies:\n              - PolicyName: data-lake-bucket-access\n                PolicyDocument:\n                    Version: 2012-10-17\n                    Statement:\n                      - Effect: Allow\n                        Action: ['s3:GetObject', 's3:PutObject']\n                        Resource: !Sub \"arn:aws:s3:::${IngestBucket}/*\" \n\n    LambdaHl7Parser:\n        Type: AWS::Lambda::Function\n        Properties: \n            FunctionName: \"hl7Parser\"\n            Code:\n                S3Bucket: !Ref TempBucket\n                S3Key: !Ref TempFuncKey\n            Description: \"HL7 parser from ER7 to JSON\"\n            Handler: \"hl7_parser.lambda_handler\"\n            Layers: \n                - !Ref hl7apyLayer\n            Role: !GetAtt LambdaTriggerRole.Arn\n            Runtime: python3.8\n            Timeout: 30\n            MemorySize: 256\n\n    # Permision for S3 to invoke Lambda\n    BucketLambdaPermission:\n        Type: AWS::Lambda::Permission\n        Properties:\n            Action: 'lambda:InvokeFunction'\n            FunctionName: !Ref LambdaHl7Parser\n            Principal: s3.amazonaws.com\n            SourceAccount: !Ref \"AWS::AccountId\" # Include our source account for added security\n            SourceArn: !Sub \"arn:aws:s3:::${IngestBucket}\"\n    \n    # S3 data lake bucket\n    DataLakeBucket:\n        Type: AWS::S3::Bucket\n        Properties:\n            BucketName: !Ref IngestBucket\n            \n            # Encryption at rest\n            BucketEncryption: \n                ServerSideEncryptionConfiguration:\n                  - ServerSideEncryptionByDefault:\n                        SSEAlgorithm: AES256\n            \n            # Block all public access\n            PublicAccessBlockConfiguration:\n                BlockPublicAcls: true\n                IgnorePublicAcls: true\n                BlockPublicPolicy: true\n                RestrictPublicBuckets: true   \n                \n            # Lambda trigger\n            NotificationConfiguration:\n                LambdaConfigurations:\n                  - Event: 's3:ObjectCreated:*'\n                    Function: !GetAtt LambdaHl7Parser.Arn\n                    Filter:\n                        S3Key:\n                            Rules:\n                              - Name: prefix\n                                Value: raw/","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":106,"column":43},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Description: 'Creates an HL7 parsing stack'","","Parameters:","    TempBucket: ","        Description: Where we are temporarily storing artifacts while deploying","        Type: String","    TempLibKey: ","        Description: Library key in temporary bucket","        Type: String","    TempFuncKey: ","        Description: Function key in temporary bucket","        Type: String","    IngestBucket:","        Description: Bucket we want to ingest HL7v2 messages into","        Type: String","","Resources:","    hl7apyLayer:","        Type: AWS::Lambda::LayerVersion","        Properties: ","            CompatibleRuntimes: [\"python2.7\", \"python3.6\", \"python3.7\", \"python3.8\"]","            Content: ","                S3Bucket: !Ref TempBucket","                S3Key: !Ref TempLibKey","            LayerName: \"hl7apy\"","            Description: \"HL7apy parser library\"","            LicenseInfo: \"MIT\"","    ","    # Role assumed by our Lambda parsing function, provides permission to access the data lake bucket","    LambdaTriggerRole:","        Type: AWS::IAM::Role","        Properties: ","            AssumeRolePolicyDocument: ","                Version: 2012-10-17","                Statement:","                  - Effect: Allow","                    Principal:","                        Service:","                          - 'lambda.amazonaws.com'","                    Action:","                      - 'sts:AssumeRole'","            Path: /","            Policies:","              - PolicyName: data-lake-bucket-access","                PolicyDocument:","                    Version: 2012-10-17","                    Statement:","                      - Effect: Allow","                        Action: ['s3:GetObject', 's3:PutObject']","                        Resource: !Sub \"arn:aws:s3:::${IngestBucket}/*\" ","","    LambdaHl7Parser:","        Type: AWS::Lambda::Function","        Properties: ","            FunctionName: \"hl7Parser\"","            Code:","                S3Bucket: !Ref TempBucket","                S3Key: !Ref TempFuncKey","            Description: \"HL7 parser from ER7 to JSON\"","            Handler: \"hl7_parser.lambda_handler\"","            Layers: ","                - !Ref hl7apyLayer","            Role: !GetAtt LambdaTriggerRole.Arn","            Runtime: python3.8","            Timeout: 30","            MemorySize: 256","","    # Permision for S3 to invoke Lambda","    BucketLambdaPermission:","        Type: AWS::Lambda::Permission","        Properties:","            Action: 'lambda:InvokeFunction'","            FunctionName: !Ref LambdaHl7Parser","            Principal: s3.amazonaws.com","            SourceAccount: !Ref \"AWS::AccountId\" # Include our source account for added security","            SourceArn: !Sub \"arn:aws:s3:::${IngestBucket}\"","    ","    # S3 data lake bucket","    DataLakeBucket:","        Type: AWS::S3::Bucket","        Properties:","            BucketName: !Ref IngestBucket","            ","            # Encryption at rest","            BucketEncryption: ","                ServerSideEncryptionConfiguration:","                  - ServerSideEncryptionByDefault:","                        SSEAlgorithm: AES256","            ","            # Block all public access","            PublicAccessBlockConfiguration:","                BlockPublicAcls: true","                IgnorePublicAcls: true","                BlockPublicPolicy: true","                RestrictPublicBuckets: true   ","                ","            # Lambda trigger","            NotificationConfiguration:","                LambdaConfigurations:","                  - Event: 's3:ObjectCreated:*'","                    Function: !GetAtt LambdaHl7Parser.Arn","                    Filter:","                        S3Key:","                            Rules:","                              - Name: prefix","                                Value: raw/"],"id":1}]]},"ace":{"folds":[],"scrolltop":1025,"scrollleft":0,"selection":{"start":{"row":89,"column":12},"end":{"row":89,"column":12},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":157,"mode":"ace/mode/text"}},"timestamp":1587174718753}